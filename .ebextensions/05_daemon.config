files:
 "/opt/elasticbeanstalk/hooks/appdeploy/post/run_supervisor_daemon.sh":
   mode: "000755"
   owner: root
   group: root
   content: |
     # Get Django environment variables
     djangoenv=`cat /opt/python/current/env | tr '\n' ',' | sed 's/%/%%/g' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g'`
     djangoenv=${djangoenv%?}
     
     # Create daemon configuration script
     daemonconf="[program:uvicorn]
     command=/opt/python/run/venv/bin/uvicorn musicroom.asgi:application --host=0.0.0.0 --port 5000
     
     directory=/opt/python/current/app
     user=ec2-user
     numprocs=1
     stdout_logfile=/var/log/stdout_uvicorn.log
     stderr_logfile=/var/log/stderr_uvicorn.log
     autostart=true
     autorestart=true
     startsecs=10
     
     ; Need to wait for currently executing tasks to finish at shutdown.
     ; Increase this if you have very long running tasks.
     stopwaitsecs = 600
     
     ; When resorting to send SIGKILL to the program to terminate it
     ; send SIGKILL to its whole process group instead,
     ; taking care of its children as well.
     killasgroup=true
     
     environment=$djangoenv
     
     [program:worker]
     command=/opt/python/run/venv/bin/python /opt/python/current/app/manage.py runworker channels default
     directory=/opt/python/current/app
     user=ec2-user
     numprocs=4
     process_name=worker%(process_num)d
     stdout_logfile=/var/log/stdout_worker.log
     stderr_logfile=/var/log/stderr_worker.log
     autostart=true
     autorestart=true
     startsecs=10
     
     ; Need to wait for currently executing tasks to finish at shutdown.
     ; Increase this if you have very long running tasks.
     stopwaitsecs = 600
     
     ; When resorting to send SIGKILL to the program to terminate it
     ; send SIGKILL to its whole process group instead,
     ; taking care of its children as well.
     killasgroup=true
     
     environment=$djangoenv
     "
     
     # Create the Supervisor conf script
     echo "$daemonconf" | sudo tee /opt/python/etc/daemon.conf
     # Add configuration script to supervisord conf (if not there already)
     if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf
         then
         echo "" | sudo tee -a /opt/python/etc/supervisord.conf
         echo "[include]" | sudo tee -a /opt/python/etc/supervisord.conf
         echo "files: daemon.conf" | sudo tee -a /opt/python/etc/supervisord.conf
     fi
     if ! grep -Fxq "[inet_http_server]" /opt/python/etc/supervisord.conf
         then
         echo "" | sudo tee -a /opt/python/etc/supervisord.conf
         echo "[inet_http_server]" | sudo tee -a /opt/python/etc/supervisord.conf
         echo "port = 127.0.0.1:9001" | sudo tee -a /opt/python/etc/supervisord.conf
     fi
     
     # Reread the Supervisor config
     sudo /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf reread
     
     # Update Supervisor in cache without restarting all services
     sudo /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf update
     
     # Start/restart processes through Supervisor
     sudo /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf restart uvicorn
     sudo /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf restart worker:*